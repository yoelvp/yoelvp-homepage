---
import type { Project } from '@/types/Project'
import type { MarkdownInstance } from 'astro'

import { Image } from 'astro:assets'
import SectionHeader from '@/components/SectionHeader.astro'
import Badge from '@/components/Badge.astro'
import Link from '@/components/Link.astro'
import { sortDateDesc } from '@/utils/date'

const projects = Object.values(import.meta.glob<MarkdownInstance<Project>>("@/pages/works/*.md", { eager: true }))
.sort((a, b) => sortDateDesc(a.frontmatter.createdAt, b.frontmatter.createdAt))
.filter(project => project.frontmatter.public)
.slice(0, 4)
---

<div class="projects">
  <SectionHeader title="Proyectos" />

  <section class="projects__list">
    {projects.map(({ frontmatter, url }) => (
      <a href={url}>
        <div class="card">
          <div class="card__image-wrapper">
            <Image
              src={frontmatter.thumb ?? ''}
              alt="imagen del proyecto"
              height="520"
              width="400"
              class="card__image"
            />
            <div class="card__stack">
              {frontmatter.stack.map(stack => (
                <Badge class="badge--deep-teal">
                  {stack}
                </Badge>
              ))}
            </div>
          </div>
          <div class="card__content">
            <h4 class="card__title primary-to-white">
              {frontmatter.title}
            </h4>
            <p class="card__description primary-to-white">
              {frontmatter.description}
            </p>
          </div>
        </div>
      </a>
    ))}

    <div>
      <Link href="/projects">Ver m√°s</Link>
    </div>
  </section>
</div>

<style>
.projects {
  width: 100%;
}

.projects__list {
  display: flex;
  flex-direction: column;
  row-gap: 3rem;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: 1.5rem;
  overflow: hidden;
  border-radius: var(--rounded-md);
  padding: 1rem;
  border: 1px solid transparent;
  transition: border-color 300ms, background-color 300ms;
}

.card:hover {
  border-color: rgba(var(--color-deep-teal-rgb), 0.2);
  background-color: rgba(var(--color-deep-teal-rgb), 0.04);
  box-shadow: 0px 0px 8px 4px rgba(var(--color-deep-teal-rgb),0.1);
  -webkit-box-shadow: 0px 0px 8px 4px rgba(var(--color-deep-teal-rgb),0.1);
  -moz-box-shadow: 0px 0px 8px 4px rgba(var(--color-deep-teal-rgb),0.1);
}

.card__image-wrapper {
  position: relative;
  width: 100%;
  overflow: hidden;
  border-radius: var(--rounded-sm);
}

.card__image-wrapper .card__image {
  width: 100%;
  height: 14rem;
  object-fit: cover;
  object-position: center;
  border-radius: var(--rounded-sm);
  transform-origin: left top;
  transform: scale(1.5);
  transition: width 600ms ease, height 300ms ease, transform 300ms ease;
}

.card:hover .card__image {
  transform: scale(1);
}

.card__image-wrapper .card__stack {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0.5rem;
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
}

.card__content {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  row-gap: 0.5rem;
}

.card__content .card__title {
  text-transform: uppercase;
  font-weight: 600;
}

@media screen and (min-width: 480px) {
  .card .card__image {
    height: 18rem;
  }
}

@media screen and (min-width: 640px) {
  .card .card__image {
    height: 20rem;
  }
}

@media screen and (min-width: 768px) {
  .card {
    flex-direction: row;
    align-items: start;
    justify-content: start;
    column-gap: 2rem;
  }

  .card .card__image {
    width: 16rem;
    height: 12rem;
  }

  .card__content {
    padding: 0.5rem 0;
    align-items: start;
    justify-content: center;
  }
}

@media screen and (min-width: 1024px) {
  .card .card__image {
    width: 28rem;
    height: 16rem;
  }
}
</style>
