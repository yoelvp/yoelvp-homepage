---
import type { Project } from '@/types/Project'
import type { MarkdownInstance } from 'astro'

import { Image } from 'astro:assets'
import SectionHeader from '@/components/SectionHeader.astro'
import Badge from '@/components/Badge.astro'
import { sortDateDesc } from '@/utils/date'

const projects = Object.values(import.meta.glob<MarkdownInstance<Project>>("@/pages/projects/*.md", { eager: true }))
.sort((a, b) => sortDateDesc(a.frontmatter.createdAt, b.frontmatter.createdAt))
.filter(project => project.frontmatter.public)
.slice(0, 3)
---

<div class="projects">
  <SectionHeader title="Proyectos" />

  <section class="projects__list">
    {projects.map(({ frontmatter, url }, index) => (
      <a href={url}>
        <div class="card">
          <div class="card__image-wrapper">
            <Image
              src={frontmatter.thumb ?? ''}
              alt="imagen del proyecto"
              height="520"
              width="400"
              class="card__image"
            />
            <div class="card__stack">
              {frontmatter.stack.map(stack => (
                <Badge class="badge--primary badge--filled white-to-primary">
                  {stack}
                </Badge>
              ))}
            </div>
          </div>
          <div class="card__content-wrapper">
            <article class="card__content">
              <h4 class="card__title primary-to-white">
                {frontmatter.title}
              </h4>
              <p class="card__description primary-to-white">
                {frontmatter.description}
              </p>
            </article>
            <span class="card__id primary-to-white">
              {index + 1}
            </span>
          </div>
        </div>
      </a>
    ))}
  </section>
</div>

<style>
.projects {
  margin-top: 2rem;
}

.projects__list {
  display: flex;
  flex-direction: column;
  row-gap: 3rem;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
  overflow: hidden;
  border-radius: var(--rounded);
  transition: border-color 300ms;
}

.card__id {
  display: none;
}

.card__image-wrapper {
  position: relative;
  height: 12rem;
  overflow: hidden;
  border-radius: var(--rounded);
  transition: width 600ms ease, height 300ms ease, transform 300ms ease, position 300ms ease;
}

.card__image-wrapper .card__image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  border: 1px solid hsla(var(--primary-600-hsl), 0.15);
  transition: transform 300ms;
}

.card:hover .card__image {
  position: relative;
  transform: scale(1.2);
}

.card__image-wrapper .card__stack {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0.5rem;
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
}

.card__content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  row-gap: 0.25rem;
}

.card__content .card__title {
  font-size: 18px;
  font-weight: 500;
}

.card__content .card__description {
  text-align: center;
  color: var(--zinc-300);
}

@media screen and (min-width: 640px) {
  .card .card__image-wrapper {
    height: 20rem;
  }
}

@media screen and (min-width: 768px) {
  .card {
    flex-direction: row;
    align-items: center;
    justify-content: start;
    column-gap: 2rem;
  }

  .card .card__image-wrapper {
    width: 24rem;
    min-width: 24rem;
    height: 12rem;
  }

  .card__content {
    height: 100%;
    align-items: start;
    justify-content: center;
  }

  .card__content .card__description {
    text-align: unset;
  }
}

@media screen and (min-width: 1024px) {
  .card {
    justify-content: space-between;
  }

  .card .card__image-wrapper {
    width: 28rem;
    height: 16rem;
  }

  .card .card__content-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    min-width: 24rem;
    width: 100%;
    column-gap: 1rem;
  }

  .card .card__id {
    display: inline-block;
    font-family: var(--font-bebas-neue);
    line-height: 100%;
    font-size: 12vh;
    transition: font-size 300ms ease;
  }
}

@media screen and (min-width: 1280px) {
  .card .card {
    column-gap: 4rem;
  }

  .card .card__content-wrapper {
    max-width: 24rem;
    column-gap: 2rem;
  }

  .card .card__id {
    font-size: 18vh;
  }
}
</style>
