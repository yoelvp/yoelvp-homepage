---
import type { Project } from '@/types/Project'

import { Image } from 'astro:assets'
import Content from '@/components/Content.astro'
import SectionHeader from '@/components/SectionHeader.astro'
import { valueOfDate } from '@/utils/value-of-date'

// const personalProjects = (await Astro.glob<Project>('@/pages/projects/*.md'))
// .sort((a: any, b: any) => {
//   return valueOfDate(b.frontmatter.createdAt) - valueOfDate(a.frontmatter.createdAt)
// })
// .filter(project => project.frontmatter.public)
// .slice(0, 3)
---

<div class="projects">
  <Content>
    <SectionHeader title="Proyectos" />

    <div class="card">
      <div class="card__wrapper">
        <div class="card__image-wrapper">
          <Image
            src={'https://r2.yoelvalverde.dev/masthead-poster.webp'}
            alt="imagen del proyecto"
            height="520"
            width="400"
            class="card__image"
          />
          <div class="card__stack">
            <span class="stack__item">
              React
            </span>
            <span class="stack__item">
              TypeScript
            </span>
          </div>
        </div>
        <article class="card__content">
          <h4 class="card__title">
            ICJ LEX & CARRANZA CONSULTORES
          </h4>
          <p class="card__description">
            Sistema web completos de academia virtual de derecho y más
          </p>
        </article>
      </div>
    </div>

    <div class="card">
      <div class="card__wrapper">
        <div class="card__image-wrapper">
          <Image
            src={'https://r2.yoelvalverde.dev/masthead-poster.webp'}
            alt="imagen del proyecto"
            height="520"
            width="400"
            class="card__image"
          />
          <div class="card__stack">
            <span class="stack__item">
              React
            </span>
            <span class="stack__item">
              TypeScript
            </span>
          </div>
        </div>
        <article class="card__content">
          <h4 class="card__title">
            ICJ LEX & CARRANZA CONSULTORES
          </h4>
          <p class="card__description">
            Sistema web completos de academia virtual de derecho y más
          </p>
        </article>
      </div>
    </div>
  </Content>
</div>

<style>
.projects {
  padding-top: 2rem;
}

.card {
  background-color: var(--dark);
  border-bottom: 1px solid var(--gray-600);
  padding: 2rem 0;
}

.card:last-child {
  border-bottom-color: transparent;
}

.card .card__wrapper {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
}

.card__image-wrapper {
  position: relative;
}

.card__image-wrapper .card__image {
  width: 100%;
  height: 180px;
  object-fit: cover;
  object-position: center;
  border-radius: var(--rounded-lg);
  border: 1px solid var(--primary-100);
}

.card__image-wrapper .card__stack {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 1rem 0.875rem;
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
}

.card__stack .stack__item {
  background: var(--primary-50);
  display: inline-flexbox;
  padding: 2px 4px;
  font-size: var(--text-sm);
  border-radius: var(--rounded-sm);
  color: var(--primary-900);
  font-weight: 400;
}

.card__content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  row-gap: 0.25rem;
}

.card__content .card__title {
  font-size: 18px;
  font-weight: 500;
}

.card__content .card__description {
  text-align: center;
}
</style>

<script>
import gsap from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'

gsap.registerPlugin(ScrollTrigger)

const cardsWrapper = gsap.utils.toArray('.card__item')
const cardsEl = gsap.utils.toArray('.card__el')

cardsWrapper.forEach((el, index) => {
  const card = cardsEl[index] as HTMLElement
  const myEl = el as HTMLElement

  if (!myEl) return
  if (!card) return

  let scale = 1
  let rotate = 0

  if (index !== cardsEl.length - 1) {
    scale = 0.9 + 0.025 * index
    rotate = -10
  }

  gsap.to(card, {
    scale,
    rotationX: rotate,
    transformOrigin: 'top center',
    ease: 'none',
    scrollTrigger: {
      trigger: myEl,
      start: 'top' + (70 + 40 * index),
      end: () => {
        if(window.innerWidth < 1024) {
          return 'bottom +=740px'
        } else {
          return 'bottom +=320px'
        }
      },
      endTrigger: '.end-anim',
      pin: myEl,
      pinSpacing: false,
      scrub: true
    }
  })
})
</script>
